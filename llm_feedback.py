# -*- coding: utf-8 -*-
"""LLM_feedback.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VPmstg0KDLV_y3a5hssfpG473SWWkY7y

# LLM feedback for each player
"""

!pip install transformers accelerate huggingface_hub

from transformers import AutoTokenizer, AutoModelForCausalLM
import torch
import json


model_name = "distilgpt2"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(
    model_name,
    device_map="auto",
    torch_dtype=torch.float16
)


with open('/content/Final_report_named.json', 'r') as f:
    emotion_data = json.load(f)


player_feedbacks = {}

for player_name, data in emotion_data.items():
    readings = data.get("emotion_readings", [])

 
    seen = set()
    filtered = []
    for r in readings:
        key = (r["time"], r["emotion"])
        if key not in seen:
            seen.add(key)
            filtered.append(r)
        if len(filtered) >= 20:
            break


    sequence = ", ".join([f"{r['time']}s: {r['emotion']}" for r in filtered]) or "No emotional data available"


    prompt = (
        f"You are a professional sports psychologist. Based on the emotional timeline of player '{player_name}', "
        "write a meaningful psychological report that describes their emotional state, behavioral patterns, and mental resilience.\n\n"
        f"Emotional observations:\n{sequence}\n\n"
        "Psychological evaluation:"
    )

    print(f"\nGenerating feedback for {player_name}...")

    try:
        inputs = tokenizer(prompt, return_tensors="pt", truncation=True, max_length=1024).to(model.device)
        outputs = model.generate(
            **inputs,
            max_new_tokens=250,
            do_sample=True,
            top_p=0.95,
            temperature=0.8,
            pad_token_id=tokenizer.eos_token_id
        )
        full_output = tokenizer.decode(outputs[0], skip_special_tokens=True)
        evaluation = full_output.replace(prompt, "").strip()

        player_feedbacks[player_name] = evaluation or "No meaningful output generated."
    except Exception as e:
        player_feedbacks[player_name] = f"[ERROR] Failed to generate: {str(e)}"


print("\nðŸ§  Psychological Evaluations:\n")
for name, feedback in player_feedbacks.items():
    print(f"--- Evaluation for {name} ---")
    print(feedback)
    print("-" * 40)
